// DiceGame.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <Windows.h>
#include <math.h>
#include <iostream>

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    setlocale(LC_ALL, "");
    int player_number;
    int bot_number;
    int action;
    std::string won_text;
    
    std::cout << "Начать игру? (1- да, 0 - нет) ";
    std::cin >> action;
    
    while (action != 0) {
        player_number = 1 + rand() % 6;
        bot_number = 1 + rand() % 6;
        if (player_number > bot_number) {
            won_text = "Игрок победил";
        }
        else if (player_number < bot_number) {
           won_text =  "Бот победил";
        }
        else if (player_number == bot_number) {
            won_text = "Ничья";
        }
        std::cout << "РЕЗУЛЬТАТ ИГРЫ : " << "\n" << "Число игрока:" << player_number << "\n" << "Число бота:" << bot_number << "\n" << "Итог:" << won_text << "\n";
        std::cout << "Продолжить игру? (1 - да, 0 - нет) ";
        std::cin >> action;
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
